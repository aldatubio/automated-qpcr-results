To release a new version of this application, as a compiled binary:

- Change the version number in version_number.txt
- Run build_installer.py to update build-related files (change dates in README.md and/or filepaths in .iss file prior to this step, as necessary)
- Run pyinstaller from command-line using the preexisting spec file; use this command while cwd is project folder (hiv/ or vhf/):
	pyinstaller main_build.spec
- Sign the executable (Windows SignTool is easy to use: https://gist.github.com/PaulCreusy/7fade8d5a8026f2228a97d31343b335e || https://learn.microsoft.com/en-us/dotnet/framework/tools/signtool-exe)
	signtool sign /f <path_of_certificate> /p <password> /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 <YourApp.exe>
  You can verify that signing worked (whether via self-signing or a code signing certificate):
	signtool verify /v <YourApp.exe>
  If you'd like to copy the SHA256 hash to your clipboard:
	Get-FileHash -Path <YourApp.exe> | clip
- Copy and paste TOML files to _internal folder of pyinstaller output
- Run Inno Setup, either in-app or command-line, using the pre-generated .iss file:
	iscc <path-to-iss-file>
- Sign the installer (same method as signing the executable)
- Update changelog with notes, new checksums, etc.
- Commit any necessary changes, then add a Git tag: https://git-scm.com/book/en/v2/Git-Basics-Tagging
	git tag -a vhf-0.0.0-alpha -m "First public pre-release of EpiFocus Assistant"
  Git commits don't automatically push tags to remote, so this must be done explicitly:
	git push origin --tags
- Create a new release, using the new tag; add initial release notes as text and installer as an available download


To continue configuration of PDF output, refer to Michael Driscoll's book on ReportLab: "ReportLab: PDF Processing with Python", ISBN: 1983154547
